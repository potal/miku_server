// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cyt_packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* StruCytPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StruCytPacket_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cyt_5fpacket_2eproto() {
  protobuf_AddDesc_cyt_5fpacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cyt_packet.proto");
  GOOGLE_CHECK(file != NULL);
  StruCytPacket_descriptor_ = file->message_type(0);
  static const int StruCytPacket_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, str_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, msg_len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, msg_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, str_tail_),
  };
  StruCytPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StruCytPacket_descriptor_,
      StruCytPacket::default_instance_,
      StruCytPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StruCytPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StruCytPacket));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cyt_5fpacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StruCytPacket_descriptor_, &StruCytPacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cyt_5fpacket_2eproto() {
  delete StruCytPacket::default_instance_;
  delete StruCytPacket_reflection_;
}

void protobuf_AddDesc_cyt_5fpacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020cyt_packet.proto\"y\n\rStruCytPacket\022\020\n\010s"
    "tr_head\030\001 \002(\t\022\017\n\007room_id\030\002 \002(\005\022\017\n\007msg_le"
    "n\030\003 \002(\005\022\020\n\010msg_type\030\004 \002(\005\022\020\n\010msg_data\030\005 "
    "\002(\014\022\020\n\010str_tail\030\006 \002(\t", 141);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cyt_packet.proto", &protobuf_RegisterTypes);
  StruCytPacket::default_instance_ = new StruCytPacket();
  StruCytPacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cyt_5fpacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cyt_5fpacket_2eproto {
  StaticDescriptorInitializer_cyt_5fpacket_2eproto() {
    protobuf_AddDesc_cyt_5fpacket_2eproto();
  }
} static_descriptor_initializer_cyt_5fpacket_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int StruCytPacket::kStrHeadFieldNumber;
const int StruCytPacket::kRoomIdFieldNumber;
const int StruCytPacket::kMsgLenFieldNumber;
const int StruCytPacket::kMsgTypeFieldNumber;
const int StruCytPacket::kMsgDataFieldNumber;
const int StruCytPacket::kStrTailFieldNumber;
#endif  // !_MSC_VER

StruCytPacket::StruCytPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StruCytPacket::InitAsDefaultInstance() {
}

StruCytPacket::StruCytPacket(const StruCytPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StruCytPacket::SharedCtor() {
  _cached_size_ = 0;
  str_head_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  room_id_ = 0;
  msg_len_ = 0;
  msg_type_ = 0;
  msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  str_tail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StruCytPacket::~StruCytPacket() {
  SharedDtor();
}

void StruCytPacket::SharedDtor() {
  if (str_head_ != &::google::protobuf::internal::kEmptyString) {
    delete str_head_;
  }
  if (msg_data_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_data_;
  }
  if (str_tail_ != &::google::protobuf::internal::kEmptyString) {
    delete str_tail_;
  }
  if (this != default_instance_) {
  }
}

void StruCytPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StruCytPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StruCytPacket_descriptor_;
}

const StruCytPacket& StruCytPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyt_5fpacket_2eproto();  return *default_instance_;
}

StruCytPacket* StruCytPacket::default_instance_ = NULL;

StruCytPacket* StruCytPacket::New() const {
  return new StruCytPacket;
}

void StruCytPacket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_str_head()) {
      if (str_head_ != &::google::protobuf::internal::kEmptyString) {
        str_head_->clear();
      }
    }
    room_id_ = 0;
    msg_len_ = 0;
    msg_type_ = 0;
    if (has_msg_data()) {
      if (msg_data_ != &::google::protobuf::internal::kEmptyString) {
        msg_data_->clear();
      }
    }
    if (has_str_tail()) {
      if (str_tail_ != &::google::protobuf::internal::kEmptyString) {
        str_tail_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StruCytPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string str_head = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_head()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str_head().data(), this->str_head().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }
      
      // required int32 room_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_msg_len;
        break;
      }
      
      // required int32 msg_len = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_msg_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_len_)));
          set_has_msg_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_msg_type;
        break;
      }
      
      // required int32 msg_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_msg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
          set_has_msg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_msg_data;
        break;
      }
      
      // required bytes msg_data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_str_tail;
        break;
      }
      
      // required string str_tail = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str_tail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_tail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str_tail().data(), this->str_tail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StruCytPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string str_head = 1;
  if (has_str_head()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str_head().data(), this->str_head().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->str_head(), output);
  }
  
  // required int32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }
  
  // required int32 msg_len = 3;
  if (has_msg_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->msg_len(), output);
  }
  
  // required int32 msg_type = 4;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->msg_type(), output);
  }
  
  // required bytes msg_data = 5;
  if (has_msg_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->msg_data(), output);
  }
  
  // required string str_tail = 6;
  if (has_str_tail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str_tail().data(), this->str_tail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->str_tail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StruCytPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string str_head = 1;
  if (has_str_head()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str_head().data(), this->str_head().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str_head(), target);
  }
  
  // required int32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }
  
  // required int32 msg_len = 3;
  if (has_msg_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->msg_len(), target);
  }
  
  // required int32 msg_type = 4;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->msg_type(), target);
  }
  
  // required bytes msg_data = 5;
  if (has_msg_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->msg_data(), target);
  }
  
  // required string str_tail = 6;
  if (has_str_tail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str_tail().data(), this->str_tail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->str_tail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StruCytPacket::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string str_head = 1;
    if (has_str_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_head());
    }
    
    // required int32 room_id = 2;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }
    
    // required int32 msg_len = 3;
    if (has_msg_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_len());
    }
    
    // required int32 msg_type = 4;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }
    
    // required bytes msg_data = 5;
    if (has_msg_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_data());
    }
    
    // required string str_tail = 6;
    if (has_str_tail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_tail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StruCytPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StruCytPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StruCytPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StruCytPacket::MergeFrom(const StruCytPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str_head()) {
      set_str_head(from.str_head());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_msg_len()) {
      set_msg_len(from.msg_len());
    }
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_msg_data()) {
      set_msg_data(from.msg_data());
    }
    if (from.has_str_tail()) {
      set_str_tail(from.str_tail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StruCytPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StruCytPacket::CopyFrom(const StruCytPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StruCytPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  
  return true;
}

void StruCytPacket::Swap(StruCytPacket* other) {
  if (other != this) {
    std::swap(str_head_, other->str_head_);
    std::swap(room_id_, other->room_id_);
    std::swap(msg_len_, other->msg_len_);
    std::swap(msg_type_, other->msg_type_);
    std::swap(msg_data_, other->msg_data_);
    std::swap(str_tail_, other->str_tail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StruCytPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StruCytPacket_descriptor_;
  metadata.reflection = StruCytPacket_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
